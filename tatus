warning: in the working copy of 'src/app/admin/menu/[vendorId]/page.tsx', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'src/app/admin/orders/[dailyOrderId]/page.tsx', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'src/app/my-orders/MyOrdersClient.tsx', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'src/app/order/[dailyOrderId]/page.tsx', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'src/components/OrderClient.tsx', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'src/components/OrderSummary.tsx', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'src/components/admin/OrderDetailClient.tsx', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'src/hooks/use-toast.ts', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/src/app/admin/menu/[vendorId]/page.tsx b/src/app/admin/menu/[vendorId]/page.tsx[m
[1mindex 3fb7533..9c657ae 100644[m
[1m--- a/src/app/admin/menu/[vendorId]/page.tsx[m
[1m+++ b/src/app/admin/menu/[vendorId]/page.tsx[m
[36m@@ -7,7 +7,8 @@[m [mimport { SiteHeader } from "@/components/SiteHeader";[m
 import { getMenusByVendorId } from '@/ai/flows/menu-flow';[m
 import { MenuEditor } from "@/components/admin/MenuEditor";[m
 import Link from "next/link";[m
[31m-import { ArrowLeft, Loader2 } from "lucide-react";[m
[32m+[m[32mimport { ArrowLeft, Loader2, RefreshCw } from "lucide-react";[m
[32m+[m[32mimport { Button } from "@/components/ui/button";[m
 import type { MenuItem } from '@/ai/flows/menu-flow';[m
 [m
 // This is now a Client Component to fetch data on the client-side.[m
[36m@@ -59,14 +60,23 @@[m [mexport default function MenuAdminPage() {[m
   return ([m
     <div className="min-h-screen bg-background font-body text-foreground">[m
       <main className="container mx-auto p-4 sm:p-6 lg:p-8">[m
[31m-        <div className="mb-8">[m
[32m+[m[32m        <div className="mb-6 flex justify-between items-center">[m
           <Link href="/admin" className="inline-flex items-center gap-2 text-sm text-muted-foreground hover:text-foreground transition-colors">[m
             <ArrowLeft className="h-4 w-4" />[m
             返回管理介面[m
           </Link>[m
[32m+[m[32m          <Button[m[41m [m
[32m+[m[32m            variant="outline"[m[41m [m
[32m+[m[32m            size="sm"[m[41m [m
[32m+[m[32m            onClick={handleMenuUpdate}[m[41m [m
[32m+[m[32m            disabled={isLoading}[m
[32m+[m[32m          >[m
[32m+[m[32m            <RefreshCw className={`mr-2 h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />[m
[32m+[m[32m            重新整理[m
[32m+[m[32m          </Button>[m
         </div>[m
         <h1 className="font-headline text-3xl font-bold mb-2">編輯菜單：{vendorName}</h1>[m
[31m-        <p className="text-muted-foreground mb-6">管理 {vendorName} 的菜單品項。</p>[m
[32m+[m[32m        <p className="text-muted-foreground mb-8">管理 {vendorName} 的菜單品項。</p>[m
         [m
         {isLoading ? ([m
           <div className="flex justify-center items-center h-64">[m
[1mdiff --git a/src/app/admin/orders/[dailyOrderId]/page.tsx b/src/app/admin/orders/[dailyOrderId]/page.tsx[m
[1mindex 6175166..00ae19a 100644[m
[1m--- a/src/app/admin/orders/[dailyOrderId]/page.tsx[m
[1m+++ b/src/app/admin/orders/[dailyOrderId]/page.tsx[m
[36m@@ -47,14 +47,14 @@[m [mexport default function OrderDetailPage() {[m
     <div className="min-h-screen bg-background font-body text-foreground">[m
       <main className="container mx-auto p-4 sm:p-6 lg:p-8">[m
         <div className="mb-6 flex justify-between items-center">[m
[31m-          <Link href="/admin" className="flex items-center gap-2 text-sm text-muted-foreground hover:text-foreground">[m
[32m+[m[32m          <Link href="/admin" className="inline-flex items-center gap-2 text-sm text-muted-foreground hover:text-foreground transition-colors">[m
             <ArrowLeft className="h-4 w-4" />[m
             返回管理介面[m
           </Link>[m
[31m-           <Button variant="outline" size="sm" onClick={fetchOrderDetails} disabled={isLoading} data-re-fetch-button>[m
[31m-              <RefreshCw className={`mr-2 h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />[m
[31m-              重新整理[m
[31m-            </Button>[m
[32m+[m[32m          <Button variant="outline" size="sm" onClick={fetchOrderDetails} disabled={isLoading} data-re-fetch-button>[m
[32m+[m[32m            <RefreshCw className={`mr-2 h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />[m
[32m+[m[32m            重新整理[m
[32m+[m[32m          </Button>[m
         </div>[m
         [m
         {isLoading ? ([m
[36m@@ -69,8 +69,11 @@[m [mexport default function OrderDetailPage() {[m
         ) : dailyOrder ? ([m
           <>[m
             <h1 className="font-headline text-3xl font-bold mb-2">訂單詳情：{dailyOrder.vendorName}</h1>[m
[31m-            <p className="text-muted-foreground mb-6">檢視 {dailyOrder.date} 的訂單，於 {dailyOrder.deadline} 截止。</p>[m
[31m-            <OrderDetailClient initialOrderDetails={orderDetails} />[m
[32m+[m[32m            <p className="text-muted-foreground mb-8">檢視 {dailyOrder.date} 的訂單，於 {dailyOrder.deadline} 截止。</p>[m
[32m+[m[32m            <OrderDetailClient[m[41m [m
[32m+[m[32m              initialOrderDetails={orderDetails}[m[41m [m
[32m+[m[32m              deadline={dailyOrder.deadline}[m
[32m+[m[32m            />[m
           </>[m
         ) : null}[m
       </main>[m
[1mdiff --git a/src/app/my-orders/MyOrdersClient.tsx b/src/app/my-orders/MyOrdersClient.tsx[m
[1mindex 8b374bc..189ad7e 100644[m
[1m--- a/src/app/my-orders/MyOrdersClient.tsx[m
[1m+++ b/src/app/my-orders/MyOrdersClient.tsx[m
[36m@@ -47,7 +47,22 @@[m [mexport function MyOrdersClient({ username }: MyOrdersClientProps) {[m
     setError(null);[m
     try {[m
       const fetchedOrders = await getOrdersByUsername(decodeURIComponent(username));[m
[31m-      setOrders(fetchedOrders);[m
[32m+[m[41m      [m
[32m+[m[32m      // 按截止時間排序：先按日期，再按時間[m
[32m+[m[32m      const sortedOrders = [...fetchedOrders].sort((a, b) => {[m
[32m+[m[32m        // 先比較日期[m
[32m+[m[32m        const dateCompare = new Date(a.dailyOrder.date).getTime() - new Date(b.dailyOrder.date).getTime();[m
[32m+[m[32m        if (dateCompare !== 0) return dateCompare;[m
[32m+[m[41m        [m
[32m+[m[32m        // 如果日期相同，再比較時間[m
[32m+[m[32m        const [aHour, aMinute] = a.dailyOrder.deadline.split(':').map(Number);[m
[32m+[m[32m        const [bHour, bMinute] = b.dailyOrder.deadline.split(':').map(Number);[m
[32m+[m[41m        [m
[32m+[m[32m        if (aHour !== bHour) return aHour - bHour;[m
[32m+[m[32m        return aMinute - bMinute;[m
[32m+[m[32m      });[m
[32m+[m[41m      [m
[32m+[m[32m      setOrders(sortedOrders);[m
     } catch (e) {[m
       setError(e instanceof Error ? e.message : '載入訂單時發生錯誤');[m
       console.error('Error fetching orders:', e);[m
[36m@@ -246,13 +261,15 @@[m [mexport function MyOrdersClient({ username }: MyOrdersClientProps) {[m
                   )}[m
                 </div>[m
                 <div className="flex items-center gap-2 w-full sm:w-auto">[m
[31m-                  <Button variant="outline" size="sm" asChild className="flex-1 sm:flex-initial">[m
[31m-                    <Link href={`/order/${dailyOrder.id}?username=${encodeURIComponent(username)}`}>[m
[31m-                      <Edit className="h-4 w-4 mr-2" />[m
[31m-                      編輯[m
[31m-                    </Link>[m
[31m-                  </Button>[m
[31m-                  {!deadlinePassed && dailyOrder.status !== '